{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","item","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,0BAAMC,SAZW,SAAAC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAQd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAAAP,GACtBF,EAAgBE,EAAEQ,OAAOF,Y,uBCPpBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,0DAE6CF,EAF7C,sDAGAG,MAAMD,GAHN,cAGbE,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAVnB,kBAcZK,GAdY,4CAAH,sDCULO,EATK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAC1B,OACI,yBAAKa,UAAU,0CACX,yBAAKC,IAAMd,EAAMe,IAAMN,IACvB,+BAAMA,EAAN,OCyBGO,EA3BC,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDN,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAU,WAENvB,EAASC,GACJuB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIvB,CAAEnB,IAEGoB,EDfwBK,CAAazB,GAAjCY,EAHmB,EAGxBN,KAAaa,EAHW,EAGXA,QAErB,OACE,oCACE,wBAAIJ,UAAU,oCAAd,IAAmDf,EAAnD,KAEEmB,GAAW,0CAEb,yBAAKJ,UAAU,6CACb,4BAEIH,EAAOJ,KAAI,SAAAkB,GAAI,OACb,kBAAC,EAAD,eACEC,IAAKD,EAAKhB,IACNgB,WEULE,EA3BM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,cAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAKvB,OACI,oCACI,4CACA,6BACA,kBAAC,EAAD,CAAcA,cAAgBA,IAC9B,6BAEA,4BAEQ4C,EAAWrB,KAAK,SAAAR,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAM3B,EACNA,SAAWA,U,MCfvC8B,IAASC,OACL,kBAAC,EAAD,MACCC,SAASC,eAAe,U","file":"static/js/main.bf539b48.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    \n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = e => {\n        setInputValue(  e.target.value )\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            setCategories( cats => [ inputValue, ...cats ]);\n            setInputValue('')\n        }\n\n\n    }\n \n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type='text'\n                value={ inputValue }\n                onChange={ handleInputChange } \n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\nexport const getGifs = async ( category ) => {\n\n    const url =  `https://api.giphy.com/v1/gifs/search?limit=10&q=${category}&api_key=DyCAJUcPRZen8tX13n8eaijg0qNsWiQF`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url\n      }\n    })\n\n    return gifs\n  }","import React from 'react'\n\nconst GifGridItem = ({ title, url }) => {\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n\n\n  const { data:images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate_animated animate__fadeIn\"> {category} </h3>\n\n      { loading && <p>Cargando...</p> }\n\n      <div className='card-grid animate_animated animate__flash'>\n        <ol>\n          {\n            images.map(item =>\n              <GifGridItem\n                key={item.id}\n                {...item}\n              />\n            )\n          }\n        </ol>\n      </div>\n    </>\n  )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n       \n        getGifs( category )\n            .then( imgs => {\n                setstate({\n                    data: imgs,\n                    loading: false\n                })\n            })\n\n    },[ category ])\n\n    return state; \n}\n\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n    \n  \n    return (\n        <>\n            <h2>GifExpertApp</h2>  \n            <br />\n            <AddCategory  setCategories={ setCategories }/>\n            <hr />\n\n            <ol>\n                { \n                    categories.map( category =>( \n                        <GifGrid \n                            key={ category }\n                            category={ category }\n                        />\n                    )) \n                }\n            </ol>\n        </>\n    )\n}\n\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n     document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}